
Функция ИмяСлужебногоРазделенногоПользователяОблачнойТелефонии()
	
	Возврат "TelephonyService";
	
КонецФункции

Функция ПарольСлужебногоРазделенногоПользователяОблачнойТелефонии()
	
	Возврат "ae71f215-2d74-4528-be4f-f29923b8f3dd";
	
КонецФункции

Функция AuthorizationСлужебногоРазделенногоПользователяОблачнойТелефонии() Экспорт
	
	Возврат ОбменСБанкамиСлужебныйВызовСервера.СтрокаBase64БезBOM(ИмяСлужебногоРазделенногоПользователяОблачнойТелефонии() + ":" + ПарольСлужебногоРазделенногоПользователяОблачнойТелефонии());
	
КонецФункции

Процедура ПриОпределенииНазначенияРолей(НазначениеРолей) Экспорт
	
	НазначениеРолей.ТолькоДляПользователейСистемы.Добавить(Метаданные.Роли.УдалитьЧтениеHTTPЗапросовПровайдераТелефонииAnonimizer.Имя);
	
КонецПроцедуры

Функция ПолучитьОбщиеНастройкиТелефонии() Экспорт
	
	ОбщиеНастройкиТелефонии = Константы.ОбщиеНастройкиТелефонии.Получить().Получить();
	Если ТипЗнч(ОбщиеНастройкиТелефонии) <> Тип("Структура") Тогда
		
		ОбщиеНастройкиТелефонии = Новый Структура;
		
	КонецЕсли;
	
	Возврат ОбщиеНастройкиТелефонии;
	
КонецФункции

Функция ПрочитатьЗначениеНастройкиНаСервере(НастройкиТелефонии, ИмяНастройки) Экспорт
	
	Если НастройкиТелефонии.Свойство(ИмяНастройки) Тогда
		
		Возврат НастройкиТелефонии[ИмяНастройки];
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ШаблонОписанияHTTPЗапроса() Экспорт
	
	Возврат 
	НСтр("ru ='Базовый URL: %1
		|HTTP-метод: %2
		|Тело HTTP-запроса: %3'");
	
КонецФункции
