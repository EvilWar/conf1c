
#Область СлужебныеПроцедурыИФункции

Процедура ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати = Неопределено) Экспорт
	
	Если ПервыйДокумент = Истина
		ИЛИ ПервыйДокумент = Неопределено Тогда
		
		ПервыйДокумент = Ложь;
		
	Иначе
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Если ТипЗнч(ДанныеПечати) = Тип("Структура") Тогда
		
		ДанныеПечати.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПредставлениеДатыВДокументах(ЗначениеДаты) Экспорт
	
	Возврат Формат(ЗначениеДаты, "ДЛФ=DD");
	
КонецФункции

Функция ПредставлениеНоменклатуры(ПараметрыНоменклатуры) Экспорт
	
	ОписаниеНоменклатуры = "";
	ПредставлениеХарактеристики = "";
	ПредставлениеАртикула = "";
	СтрокаСерийныеНомера = "";
	
	Если ПараметрыНоменклатуры.Свойство("Содержание") 
		И НЕ ПустаяСтрока(ПараметрыНоменклатуры.Содержание) Тогда
		
		ПредставлениеНоменклатуры = ПараметрыНоменклатуры.Содержание;
		
	Иначе
		
		ПредставлениеНоменклатуры = ПараметрыНоменклатуры.ПредставлениеНоменклатуры;
		
		Если ПараметрыНоменклатуры.Свойство("ПредставлениеХарактеристики") Тогда
			
			ПредставлениеХарактеристики = ПараметрыНоменклатуры.ПредставлениеХарактеристики;
			
		КонецЕсли;
		
		Если ПараметрыНоменклатуры.Свойство("ПредставлениеАртикула") Тогда
			
			ПредставлениеАртикула = ПараметрыНоменклатуры.ПредставлениеАртикула;
			
		КонецЕсли;
		
		Если ПараметрыНоменклатуры.Свойство("СтрокаСерийныеНомера") Тогда
			
			СтрокаСерийныеНомера = ПараметрыНоменклатуры.СтрокаСерийныеНомера;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ПредставлениеНоменклатуры, ПредставлениеХарактеристики, ПредставлениеАртикула, СтрокаСерийныеНомера);
	
КонецФункции

Функция ПредставлениеЗаголовкаНДС(СуммаНДС, СуммаВключаетНДС, ЧастичнаяОплата) Экспорт
	Перем ЗаголовокИтоговНДС;
	
	ТекстНДС = НСтр("ru ='НДС'");
	Если ЧастичнаяОплата Тогда
		
		ТекстНДС = ТекстНДС + НСтр("ru =' оплаты'");
		
	КонецЕсли;
	
	Если СуммаНДС = 0 Тогда
		
		ЗаголовокИтоговНДС = НСтр("ru ='Без налога (НДС)'");
		
	ИначеЕсли СуммаВключаетНДС Тогда
		
		ЗаголовокИтоговНДС = СтрШаблон(НСтр("ru ='В том числе %1:'"), ТекстНДС);
		
	Иначе
		
		ЗаголовокИтоговНДС = СтрШаблон(НСтр("ru ='Сумма %1:'"), ТекстНДС);
		
	КонецЕсли;
	
	Возврат ЗаголовокИтоговНДС;
	
КонецФункции

Функция ПредставлениеОснованияПечати(ОснованиеПечатиСсылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОснованиеПечатиСсылка) Тогда
	
		Возврат "";
		
	ИначеЕсли ТипЗнч(ОснованиеПечатиСсылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		Возврат Нстр("ru = 'Договор: '") + Строка(ОснованиеПечатиСсылка.Наименование);
		
	ИначеЕсли ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.СчетНаОплату")
		ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.ЗаказПокупателя")
		ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.ЗаказПоставщику")
		ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.РасходнаяНакладная")
		ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.АктВыполненныхРабот")
		ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.ПриемИПередачаВРемонт")
		Тогда
		
		Возврат Строка(ОснованиеПечатиСсылка);
		
	КонецЕсли;
	
КонецФункции

Функция ПредставлениеНомераДатыОснованияПечати(ОснованиеПечатиСсылка) Экспорт
	
	ДанныеОснованияПечати = Новый Структура("Номер, Дата");
	
	Если ЗначениеЗаполнено(ОснованиеПечатиСсылка) Тогда
		
		Если ТипЗнч(ОснованиеПечатиСсылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			
			ДанныеОснованияПечати.Номер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОснованиеПечатиСсылка, "НомерДоговора");
			ДанныеОснованияПечати.Дата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОснованиеПечатиСсылка, "ДатаДоговора");
			
		ИначеЕсли ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.СчетНаОплату")
			ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.ЗаказПокупателя")
			ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.ЗаказПоставщику")
			Тогда
			
			ЗаполнитьЗначенияСвойств(ДанныеОснованияПечати, ОснованиеПечатиСсылка, "Номер, Дата");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДанныеОснованияПечати;
	
КонецФункции

Функция ПредставлениеСерийногоНомера(ТаблицаСерийныхНомеров, КлючСвязи) Экспорт
	
	ПредставлениеСерийногоНомера = "";
	
	Если ТипЗнч(ТаблицаСерийныхНомеров) = Тип("ТаблицаЗначений")
		И ТаблицаСерийныхНомеров.Количество() > 0 Тогда
		
		МассивНайденныхСтрок = ТаблицаСерийныхНомеров.НайтиСтроки(Новый Структура("КлючСвязи", КлючСвязи));
		Для каждого СтрокаМассива Из МассивНайденныхСтрок Цикл
			
			ПредставлениеСерийногоНомера = ПредставлениеСерийногоНомера + ?(ПустаяСтрока(ПредставлениеСерийногоНомера), "", ", ") + СтрокаМассива.СерийныйНомер;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ПредставлениеСерийногоНомера;
	
КонецФункции

Функция ПолучитьИсходныйДокументКорректировки(ДокументСсылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
		
		Возврат Неопределено;
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		Возврат ПолучитьИсходныйДокументКорректировки(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "ДокументОснование"));
		
	Иначе
		
		Возврат ДокументСсылка;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОбластьБезопасно(Макет, ИмяОбласти, ПредставлениеОбласти, Ошибки) Экспорт
	Перем ОбластьМакета;
	
	Если Макет.Области.Найти(ИмяОбласти) = Неопределено Тогда
		
		ТекстСообщения = НСтр("ru ='ВНИМАНИЕ! Не обнаружена область макета %1. Возможно используется пользовательский макет.'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ?(ПустаяСтрока(ПредставлениеОбласти), ИмяОбласти, ПредставлениеОбласти));
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения, Неопределено);
		
	Иначе
		
		ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
		
	КонецЕсли;
	
	Возврат ОбластьМакета;
	
КонецФункции

Функция ПолучитьПлашкуПодписиБезопастно(ОбластьМакета, ИмяПлашки, ПредставлениеПодписи, Ошибки) ЭКспорт
	
	ПлашкаПодписи = ОбластьМакета.Области.Найти(ИмяПлашки);
	Если ПлашкаПодписи = Неопределено Тогда
		
		ТекстСообщения = НСтр("ru ='ВНИМАНИЕ! Нет места для подписи %1. Возможно используется пользовательский макет.'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ?(ПустаяСтрока(ПредставлениеПодписи), ИмяПлашки, ПредставлениеПодписи));
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ТекстСообщения, Неопределено);
		
	КонецЕсли;
	
	ПлашкаПодписи.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
	
	Возврат ПлашкаПодписи;
	
КонецФункции

Функция ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДатаДокумента, НомерДокумента, Префикс) Экспорт
	
	Если ДатаДокумента < Дата('20110101') Тогда
		
		Возврат УправлениеНебольшойФирмойСервер.ПолучитьНомерНаПечать(НомерДокумента, Префикс);
		
	Иначе
		
		Возврат ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерДокумента, Истина, Истина);
		
	КонецЕсли;
	
КонецФункции

Функция ШаблонТекстаПредупрежденияПравкиМакета() Экспорт
	
	Возврат НСтр("ru ='ВНИМАНИЕ! Возможно используется пользовательский макет. Штатный механизм печати счетов может работать некоректно.'");
	
КонецФункции

Функция ИтоговаяСтрока(КоличествоПозиций, СуммаДокумента, ВалютаДокумента) Экспорт
	
	Возврат СтрШаблон(
		НСтр("ru='Всего наименований %1, на сумму %2'"),
		КоличествоПозиций,
		УправлениеНебольшойФирмойСервер.ФорматСумм(СуммаДокумента, ВалютаДокумента)
	);
	
КонецФункции

#КонецОбласти